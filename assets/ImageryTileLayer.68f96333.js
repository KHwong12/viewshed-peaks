var it=Object.defineProperty,st=Object.defineProperties;var nt=Object.getOwnPropertyDescriptors;var Be=Object.getOwnPropertySymbols;var rt=Object.prototype.hasOwnProperty,at=Object.prototype.propertyIsEnumerable;var Oe=(t,e,i)=>e in t?it(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,B=(t,e)=>{for(var i in e||(e={}))rt.call(e,i)&&Oe(t,i,e[i]);if(Be)for(var i of Be(e))at.call(e,i)&&Oe(t,i,e[i]);return t},L=(t,e)=>st(t,nt(e));import{Z as Ve,e as I,d as S,aa as W,o1 as ye,cz as Y,gU as le,lA as Ye,i as K,ol as Xe,t as z,r as P,hq as ot,bd as Ke,cc as lt,dK as ut,x as $,aJ as X,aB as N,bC as ct,dH as Ze,aq as Qe,bD as ht,om as ft,bf as dt,on as mt,lo as pt,lq as gt,ls as yt,lt as xt,lx as It,lp as vt,lv as wt,lu as bt,j as St,b8 as Tt,f8 as pe,cY as Rt,kn as Ct,cS as _t,d1 as kt,nO as Mt,d0 as Pt,cR as Ft}from"./index.89a7b683.js";import{p as $e,a as et,Z as De,T as Bt,S as Ot,j as $t,b as Dt,u as Et,o as At,l as zt}from"./rasterRendererHelper.ddc7322a.js";import{f as Ht,c as Nt,N as Lt,b as Jt,y as Ee,P as Wt,e as ge,B as qt,r as Ae,l as ue,v as jt,s as Ut,g as Me,O as Gt,M as Vt,j as Yt,C as Xt,k as Kt,m as xe,o as Zt,D as Qt,q as ei}from"./dataUtils.7972f2f0.js";import{d as ti,v as ze,A as He,q as ii,P as Ne,G as Re,j as Ce,L as si,T as ni,R as ri}from"./rasterProjectionHelper.d9c5b1bd.js";import{e as ai,f as oi,m as Pe,c as li}from"./utils.38a3607c.js";import{u as ui}from"./PixelBlock.0233a4ee.js";import"./ClassBreaksDefinition.f112ce2a.js";import"./LercCodec.95c0fb50.js";import"./colorUtils.c7035b36.js";const Le=Ve.getLogger("esri.layers.mixins.ImageryTileMixin"),ci=t=>{let e=class extends t{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(i){this._set("url",Xe(i,Le))}set renderer(i){this._set("renderer",i),this.updateRenderer()}async convertVectorFieldData(i,s){if(z(i))return null;const r=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:i,dataType:n},s):Ht(i,n)}async createStreamlinesMesh(i,s){const r=this._rasterJobHandler.instance;return r?r.createStreamlinesMesh(i,s):Nt(i.rendererSettings,i.flowData,P(s.signal)?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){const{multidimensionalInfo:s}=this.rasterInfo;if(z(s))return i;let r=i.multidimensionalDefinition||this.multidimensionalDefinition;!z(r)&&r.length||(r=this._getDefaultSlice());const n=i.timeExtent||this.timeExtent;if(P(r)&&P(n)&&(P(n.start)||P(n.end))){var a,u;r=r.map(d=>d.clone());const o=(a=s.variables.find(({name:d})=>d===r[0].variableName))==null||(u=a.dimensions)==null?void 0:u.find(({name:d})=>d==="StdTime"),l=r.find(({dimensionName:d})=>d==="StdTime");if(!o||!l)return L(B({},i),{multidimensionalDefinition:null});const{start:c,end:h}=n,m=z(c)?null:c.getTime(),f=z(h)?null:h.getTime(),g=m!=null?m:f,p=f!=null?f:m;if(P(o.values)){const d=o.values.filter(y=>{if(Array.isArray(y)){if(g===p)return y[0]<=g&&y[1]>=g;const x=y[0]<=g&&y[1]>g||y[0]<p&&y[1]>=p,v=y[0]>=g&&y[1]<=p||y[0]<g&&y[1]>p;return x||v}return g===p?y===g:y>=g&&y<=p});if(d.length){const y=d.sort((x,v)=>{var _,w,T,b;return g===p?((T=x[0])!=null?T:x)-((b=v[0])!=null?b:v):Math.abs(((_=x[1])!=null?_:x)-p)-Math.abs(((w=v[1])!=null?w:v)-p)})[0];l.values=[y]}else r=null}else if(o.hasRegularIntervals&&o.extent){const[d,y]=o.extent;g>y||p<d?r=null:l.values=g===p?[g]:[Math.max(d,g),Math.min(y,p)]}}return L(B({},i),{multidimensionalDefinition:r})}async updateRenderer(){if(!this.loaded||JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const i=this._rasterJobHandler.instance;i&&(this.symbolizer.rendererJSON=De(this.renderer.toJSON()),this.symbolizer.bind(),await i.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(i,s){const r=i&&i.pixelBlock;if(!(P(r)&&r.pixels&&r.pixels.length>0))return null;let n;await this.updateRenderer();const a=this._rasterJobHandler.instance,{bandIds:u}=this;return n=a?await a.symbolize(L(B({},i),{simpleStretchParams:s,bandIds:u})):this.symbolizer.symbolize(L(B({},i),{simpleStretchParams:s,bandIds:u})),n}getTileUrl(i,s,r){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${r}`:""}getCompatibleTileInfo(i,s,r=!1){if(!this.loaded||z(s))return null;if(r&&i.equals(this.spatialReference))return this.tileInfo;const n=ot(i);return le.create({size:256,spatialReference:i,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,r,n={}){if(n.requestAsImageElement){const a=this.getTileUrl(i,s,r);return Ke(a,{responseType:"image",query:B(B({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:n.signal}).then(u=>u.data)}if(P(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),z(n.multidimensionalDefinition))){const a=n.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,r,a),pixelBlock:null}}return await this._initJobHandler(),this.renderer.type==="raster-shaded-relief"&&(n=L(B({},n),{buffer:{cols:1,rows:1}})),this.raster.fetchTile(i,s,r,n)}async fetchPixels(i,s,r,n={}){return P(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),z(n.multidimensionalDefinition))?{extent:i,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(i,s,r,n))}async identify(i,s={}){return P(this.rasterInfo.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),z(s.multidimensionalDefinition))?{location:i,value:null}:this.raster.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var i;const s=this.rasterInfo.multidimensionalInfo;if(!P(s)||this.rasterInfo.dataType!=="standard-time")return!1;const r=(i=this.multidimensionalDefinition[0])==null?void 0:i.variableName;return s.variables.some(n=>n.name===r&&n.dimensions.some(a=>a.name==="StdTime"))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new Dt;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>{this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(this.interpolation==null){var i;const s=Bt(this.rasterInfo,this.raster.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",s)}}_getDefaultSlice(){const{multidimensionalInfo:i}=this.raster.rasterInfo;if(!P(i))return null;const s=i.variables[0];return s.dimensions.map(r=>{var n,a;return new $e({variableName:s.name,dimensionName:r.name,values:[(n=(a=r.values)==null?void 0:a[0])!=null?n:r.extent[0]],isSlice:!0})})}_configDefaultRenderer(){const i=this.raster.rasterInfo;var s;this.bandIds||(this.bandIds=Ot(i)),this.renderer||(this.renderer=$t(i,{bandIds:this.bandIds,variableName:P(this.multidimensionalDefinition)?(s=this.multidimensionalDefinition[0])==null?void 0:s.variableName:null})),this.symbolizer?(this.symbolizer.rendererJSON=De(this.renderer.toJSON()),this.symbolizer.rasterInfo=i):this.symbolizer=new Lt({rendererJSON:this.renderer.toJSON(),rasterInfo:i});const r=this.symbolizer.bind();r.success||Le.warn("imagery-tile-mixin",r.error||"The given renderer is not supported by the layer.")}};return I([S()],e.prototype,"_cachedRendererJson",void 0),I([S()],e.prototype,"_compatibleFullExtent",void 0),I([S()],e.prototype,"_rasterJobHandler",void 0),I([S()],e.prototype,"bandIds",void 0),I([S()],e.prototype,"copyright",void 0),I([S({type:W}),ye("rasterInfo.extent")],e.prototype,"fullExtent",void 0),I([S()],e.prototype,"interpolation",void 0),I([S()],e.prototype,"ioConfig",void 0),I([S({type:[$e]})],e.prototype,"multidimensionalDefinition",void 0),I([S()],e.prototype,"raster",void 0),I([S({readOnly:!0}),ye("raster.rasterInfo")],e.prototype,"rasterInfo",void 0),I([S()],e.prototype,"sourceJSON",void 0),I([S({type:Y}),ye("rasterInfo.spatialReference")],e.prototype,"spatialReference",void 0),I([S({type:le}),ye("rasterInfo.storageInfo.tileInfo")],e.prototype,"tileInfo",void 0),I([S(Ye)],e.prototype,"url",null),I([S({types:et})],e.prototype,"renderer",null),I([S()],e.prototype,"symbolizer",void 0),e=I([K("esri.layers.ImageryTileMixin")],e),e};class hi{constructor(e=15e3,i=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,i)}decreaseRefCount(e,i){const s=e+"/"+i,r=this._cachedBlocks;if(r.has(s)){const n=r.get(s);return n.refCount--,n.refCount<=0&&(r.delete(s),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,i){const s=e+"/"+i,r=this._cachedBlocks;if(r.has(s)){const n=r.get(s);return n.ts=Date.now(),n.refCount++,r.delete(s),r.set(s,n),n.block}return null}putBlock(e,i,s,r=null){const n=this._cachedBlocks,a=e+"/"+i;if(n.has(a)){const u=n.get(a);u.ts=Date.now(),u.refCount++}else n.set(a,{block:s,ts:Date.now(),refCount:1,controller:r});this.trim(),this.updateTimer()}deleteBlock(e,i){const s=this._cachedBlocks,r=e+"/"+i;s.has(r)&&s.delete(r)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const i=Array.from(e),s=Date.now();for(let r=0;r<i.length&&i[r][1].ts<=s-this._duration;r++)e.delete(i[r][0]);e.size===0&&this.clearTimer()},this._interval)}trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const i=Array.from(e);for(let s=0;s<i.length-this._size;s++)e.delete(i[s][0])}clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}}const te=new Map,ie=new hi;function Je(t,e){return e==null?t:`${t}?sliceId=${e}`}function fi(t,e,i){if(!te.has(t))return e==null?ie.decreaseRefCount(t,i):0;const s=te.get(t);if(s[e]==null)return ie.decreaseRefCount(t,i);const r=s[e].cache;if(r.has(i)){const n=r.get(i);if(n.refCount--,n.refCount===0){r.delete(i);for(let a=0;a<s.length;a++)s[a]&&s[a].cache.has(i)&&s[a].cache.delete(i);n.controller&&n.controller.abort()}return n.refCount}return 0}function We(t,e,i){if(!te.has(t))return e==null?ie.getBlock(t,i):null;const s=te.get(t);if(s[e]==null){for(let n=0;n<s.length;n++)if(s[n]&&s[n].cache.has(i)){const a=s[n].cache.get(i);return a.refCount++,a.block}return ie.getBlock(t,i)}const r=s[e].cache;if(r.has(i)){const n=r.get(i);return n.refCount++,n.block}for(let n=0;n<s.length;n++)if(n!==e&&s[n]&&s[n]&&s[n].cache.has(i)){const a=s[n].cache.get(i);return a.refCount++,r.set(i,a),a.block}return null}function qe(t,e,i,s,r=null){if(!te.has(t))return void(e==null&&ie.putBlock(t,i,s,r));const n=te.get(t);if(n[e]==null)return void ie.putBlock(t,i,s,r);const a={refCount:1,block:s,isResolved:!1,isRejected:!1,controller:r};s.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),n[e].cache.set(i,a)}function di(t,e,i){if(!te.has(t))return void(e==null&&ie.deleteBlock(t,i));const s=te.get(t);s[e]!=null?s[e].cache.delete(i):ie.deleteBlock(t,i)}const Ie=8;let U=class extends lt(ut){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=ti();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t=L(B({},t),{ioConfig:B({resolution:null,bandIds:null,sampling:"closest",tileInfo:le.create()},t.ioConfig)})),t}set url(t){this._set("url",Xe(t,Ve.getLogger(this.declaredClass)))}async open(t){throw new $("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,i,s={}){const r=s.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(t,e,i,r);return this.fetchPixels(n,r.size[0],r.size[1],s)}async identify(t,e={}){e=this._getRequestOptionsWithSliceId(e);const{spatialReference:i,extent:s}=this.rasterInfo,{datumTransformation:r}=e;let n=ze(t,i,r);if(!s.intersects(n))return{location:n,value:null};if(P(this.rasterInfo.transform)){const v=this.rasterInfo.transform.inverseTransform(n);if(!this.rasterInfo.nativeExtent.intersects(v))return{location:v,value:null};n=v}let a=0;if(e.srcResolution)a=He(e.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(t,e),a==null)return{location:n,value:null};const u=this.identifyPixelLocation(n,a,null);if(u===null)return{location:n,value:null};const{row:o,col:l,rowOffset:c,colOffset:h}=u,m=Je(this.url,e.sliceId),f=`${a}/${o}/${l}`;let g=We(m,null,f);z(g)&&(g=this.fetchRawTile(a,o,l,e),qe(m,null,f,g));const p=await g;if(z(p)||!p.pixels||p.pixels.length===0)return{location:n,value:null};const d=c*this.rasterInfo.storageInfo.blockHeight+h,y=!p.mask||p.mask[d]?p.pixels.map(v=>v[d]):null,x=this.rasterInfo.dataType;return(x==="vector-magdir"||x==="vector-uv")&&(y==null?void 0:y.length)>1?{location:n,value:y,magdirValue:x==="vector-magdir"?[y[0],y[1]]:Jt([y[0],y[1]]),pyramidLevel:a}:{location:n,value:y,pyramidLevel:a}}async fetchPixels(t,e,i,s={}){t=ii(t);const r=Ne(t.spatialReference),n=Re(t),a=Ne(this.rasterInfo.spatialReference),u=P(a)&&this.rasterInfo.extent.width>=a/2;if(s=this._getRequestOptionsWithSliceId(s),z(r)||n===0||n===1&&u)return this._fetchPixels(t,e,i,s);if(n>=3)return{extent:t,pixelBlock:null};const o=[],{xmin:l,xmax:c}=t,h=Math.round(r/(c-l)*e),m=h-Math.round((r/2-l)/(c-l)*e);let f=0;const g=[];for(let x=0;x<=n;x++){const v=new W({xmin:x===0?l:-r/2,xmax:x===n?c-r*x:r/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),_=x===0?h-m:x===n?e-f:h;f+=_,g.push(_);const w=this._fetchPixels(v,_,i,s);o.push(w)}const p=(await Promise.all(o)).map(x=>x==null?void 0:x.pixelBlock);let d=null;const y={width:e,height:i};return d=this.rasterJobHandler?await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:g},s):Ee(p,y,{blockWidths:g}),{extent:t,srcExtent:Ce(t,this.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:d}}async fetchRawPixels(t,e,i,s){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:u}=this.getBlockWidthHeight(t);let{x:o,y:l}=e,{width:c,height:h,wrapCount:m}=i;const f=X(this._getRasterTileAlignmentInfo(t,0));s.buffer&&(o-=s.buffer.cols,l-=s.buffer.rows,c+=2*s.buffer.cols,h+=2*s.buffer.rows);const g=Math.floor(o/a),p=Math.floor(l/u),d=Math.floor((o+c-1)/a),y=Math.floor((l+h-1)/u),x=n[t];if(!x)return null;const{minRow:v,minCol:_,maxCol:w,maxRow:T}=x;if(m===0&&(y<v||d<_||p>T||g>w))return null;const b=new Array;let C=!1;const R=this.ioConfig.allowPartialFill==null?s.allowPartialFill:this.ioConfig.allowPartialFill;for(let j=p;j<=y;j++)for(let k=g;k<=d;k++){const Z=m===0||f==null||k<f.worldColumnCountFromOrigin?k:k%f.worldColumnCountFromOrigin-f.originColumnOffset;if(j>=v&&Z>=_&&T>=j&&w>=Z){const D=this._fetchRawTile(t,j,Z,s);R?b.push(new Promise(Q=>{D.then(tt=>Q(tt)).catch(()=>{C=!0,Q(null)})})):b.push(D)}else b.push(null)}if(b.length===0)return null;const M=await Promise.all(b),A={height:(y-p+1)*u,width:(d-g+1)*a},{spatialReference:F}=this.rasterInfo,q=this.getPyramidPixelSize(t),{x:E,y:ae}=q;return{extent:new W({xmin:r.x+g*a*E,xmax:r.x+(d+1)*a*E,ymin:r.y-(y+1)*u*ae,ymax:r.y-p*u*ae,spatialReference:F}),pixelBlocks:M,mosaicSize:A,isPartiallyFilled:C}}fetchRawTile(t,e,i,s){throw new $("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Ce(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?Wt(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,i){var s,r;const{customFetchParameters:n}=this.ioConfig,{range:a,query:u,headers:o}=e;i=(s=(r=i)!=null?r:e.retryCount)!=null?s:this.ioConfig.retryCount;const l=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await Ke(t,L(B({},e),{query:B(B({},u),n),headers:B(B({},o),l)}))}catch(c){if(i>0)return i--,this.request(t,e,i);throw c}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;if(!P(e)||!P(t)||t.length===0)return null;let i=0;const s=t[0].variableName;for(let r=0;r<e.variables.length;r++){const n=e.variables[r],a=n.dimensions;if(n.name!==s){i+=a.map(l=>this._getDimensionValuesCount(l)).reduce((l,c)=>l+c);break}const u=a.map(l=>this._getDimensionValuesCount(l)),o=a.length;for(let l=0;l<o;l++){const c=t.filter(f=>f.dimensionName===a[l].name)[0];if(c==null)return null;const h=Array.isArray(c.values[0])?c.values[0][0]:c.values[0],m=this._getIndexFromDimensions(h,a[l]);if(m===-1)return null;u.shift(),i+=l===o-1?m:m*u.reduce((f,g)=>f+g)}}return i}getTileExtentFromTileInfo(t,e,i,s){const r=s.lodAt(t);return this.getTileExtent({x:r.resolution,y:r.resolution},e,i,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:i,pixelSize:s}=this.rasterInfo;if(!t.tileInfo){const r=[],n=t.maximumPyramidLevel||0;let a=Math.max(s.x,s.y),u=1/.0254*96*a;for(let l=0;l<=n;l++)r.push({level:n-l,resolution:a,scale:u}),a*=2,u*=2;const o=new N({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new le({origin:o,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:r}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,s){const{width:r,height:n,nativeExtent:a,pixelSize:u,spatialReference:o}=t,l=new N({x:a.xmin,y:a.ymax,spatialReference:o});s==null&&(s=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const c=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[u],s);t.storageInfo=new ge({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:l,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:c})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,i,s,r,n=0,a=2){if(r.length===1&&n>0){r=[...r];let{x:c,y:h}=r[0];for(let m=0;m<n;m++)c*=a,h*=a,r.push({x:c,y:h})}const u=[],{x:o,y:l}=s;for(let c=0;c<r.length;c++){const{x:h,y:m}=r[c];u.push({minCol:Math.floor((t.xmin-o+.1*h)/e/h),maxCol:Math.floor((t.xmax-o-.1*h)/e/h),minRow:Math.floor((l-t.ymax+.1*m)/i/m),maxRow:Math.floor((l-t.ymin-.1*m)/i/m)})}return u}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(t===0)return e;if(P(i)&&i.length)return i[t-1];const r=s**t;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(t,e,i){const{spatialReference:s,nativeExtent:r}=this.rasterInfo,{blockWidth:n,blockHeight:a,maximumPyramidLevel:u,origin:o}=this.rasterInfo.storageInfo,l=ze(t,s,i);if(!r.intersects(l)||e<0||e>u)return null;const c=this.getPyramidPixelSize(e),{x:h,y:m}=c,f=(o.y-l.y)/m/a,g=(l.x-o.x)/h/n,p=Math.min(a-1,Math.floor((f-Math.floor(f))*a)),d=Math.min(n-1,Math.floor((g-Math.floor(g))*n));return{pyramidLevel:e,row:Math.floor(f),col:Math.floor(g),rowOffset:p,colOffset:d,srcLocation:l}}getTileExtent(t,e,i,s,r,n){const[a,u]=n,o=s.x+i*a*t.x,l=o+a*t.x,c=s.y-e*u*t.y,h=c-u*t.y;return new W({xmin:o,xmax:l,ymin:h,ymax:c,spatialReference:r})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,i){const s=this.rasterInfo.storageInfo.blockBoundary[t];return!s||s.maxRow<e||s.maxCol<i||s.minRow>e||s.minCol>i}async _fetchPixels(t,e,i,s={}){let r=Re(t);if(r>=2)return{extent:t,pixelBlock:null};const n=this._getSourceDataInfo(t,e,i,s),{pyramidLevel:a,pyramidResolution:u,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:h}=n;if(c===0||h===0)return{extent:t,srcExtent:l,pixelBlock:null};const m=X(this.rasterInfo.transform);(m==null?void 0:m.type)==="gcs-shift"&&(r=Re(n.srcExtent,!0));const f=this.rasterInfo.storageInfo,g={x:Math.floor((l.xmin-f.origin.x)/u.x+.1),y:Math.floor((f.origin.y-l.ymax)/u.y+.1)},p=await this.fetchRawPixels(a,g,{width:c,height:h,wrapCount:r},s);if(!p)return{extent:t,srcExtent:l,pixelBlock:null};const d=a>0?f.pyramidBlockWidth:f.blockWidth,y=a>0?f.pyramidBlockHeight:f.blockHeight,x=d===c&&y===h&&g.x%d==0&&g.y%y==0,v=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),_=!t.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:w}=s;if(!_&&x&&p.pixelBlocks.length===1&&d===e&&y===i&&o.x===v.x&&o.y===v.y)return{extent:t,srcExtent:l,pixelBlock:p.pixelBlocks[0]};const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:p.extent,pixelSize:v.toJSON(),datumTransformation:w,rasterTransform:m,hasWrapAround:r>0,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1},s):si({projectedExtent:t,srcBufferExtent:p.extent,pixelSize:v,datumTransformation:w,rasterTransform:m,hasWrapAround:r>0,isAdaptive:!1});let b;const C=!s.requestRawData,R={rows:T.spacing[0],cols:T.spacing[1]},M=X(this._getRasterTileAlignmentInfo(a,p.extent.xmin)),{pixelBlocks:A,mosaicSize:F,isPartiallyFilled:q}=p;if(this.rasterJobHandler)b=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:A,srcMosaicSize:F,destDimension:C?{width:e,height:i}:null,coefs:C?T.coefficients:null,sampleSpacing:C?R:null,interpolation:s.interpolation,alignmentInfo:M,blockWidths:null},s);else{const E=Ee(A,F,{alignmentInfo:M});b=C?qt(E,{width:e,height:i},T.coefficients,R,s.interpolation):E}return s.requestRawData?{srcExtent:l,pixelBlock:b,transformGrid:T,extent:t,isPartiallyFilled:q}:{srcExtent:l,extent:t,pixelBlock:b}}_fetchRawTile(t,e,i,s){const r=this.rasterInfo.storageInfo.blockBoundary[t];if(!r)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:u,maxRow:o}=r;if(e<n||i<a||e>o||i>u)return Promise.resolve(null);const l=Je(this.url,s.sliceId),c=`${t}/${e}/${i}`;let h=We(l,s.registryId,c);if(z(h)){const m=new AbortController;h=this.fetchRawTile(t,e,i,L(B({},s),{signal:m.signal})),qe(l,s.registryId,c,h,m),h.catch(()=>di(l,s.registryId,c))}return s.signal&&ct(s,()=>{fi(l,s.registryId,c)}),h}_getIndexFromDimensions(t,e){const{extent:i,interval:s,unit:r,values:n}=e;if(n!=null&&n.length)return Array.isArray(n[0])?n.findIndex(l=>l[0]<=t&&l[1]>=t):n.indexOf(t);if(t>i[1])return-1;const a=i[0];let u=-1;if(r==="ISO8601"){var o;switch(((o=e.intervalUnit)==null?void 0:o.toLowerCase())||"seconds"){case"seconds":u=Math.round((t-a)/1e3/s);break;case"minutes":u=Math.round((t-a)/6e4/s);break;case"hours":u=Math.round((t-a)/36e5/s);break;case"days":u=Math.round((t-a)/864e5/s);break;case"years":u=Math.round((new Date(t).getUTCFullYear()-new Date(a).getUTCFullYear())/s);break;case"decades":u=Math.round((new Date(t).getUTCFullYear()-new Date(a).getUTCFullYear())/10/s)}return u}return Math.round((t-a)/s)}_getDimensionValuesCount(t){const{extent:e,interval:i,unit:s,values:r}=t;let n=(r==null?void 0:r.length)||0;if(n)return n;const a=e[0];if(n===0&&s==="ISO8601"){var u;switch(((u=t.intervalUnit)==null?void 0:u.toLowerCase())||"seconds"){case"seconds":n=Math.round((e[1]-e[0])/1e3/i);break;case"minutes":n=Math.round((e[1]-e[0])/6e4/i);break;case"hours":n=Math.round((e[1]-e[0])/36e5/i);break;case"days":n=Math.round((e[1]-e[0])/864e5/i);break;case"years":n=Math.round((new Date(e[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":n=Math.round((new Date(e[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return n}return Math.round((e[1]-e[0])/i)}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=ni(this.rasterInfo)),P(this._rasterTileAlighmentInfo.pyramidsInfo)?B({startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[t]):null}_getSourceDataInfo(t,e,i,s={}){const r={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};s.srcResolution&&(r.srcResolution=s.srcResolution,this._updateSourceDataInfo(t,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:u,pyramidLevel:o}=r,l=a/e,c=u/i,h=o<n&&l*c>=16;if(h||o===n&&(l>Ie||c>Ie)||a===0||u===0){const m=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference});let f=ri(m,this.rasterInfo.spatialReference,t,r.datumTransformation);const g=!f||s.srcResolution&&f.x+f.y<s.srcResolution.x+s.srcResolution.y;if(h&&s.srcResolution&&g){const p=Math.round(Math.log(Math.max(l,c))/Math.LN2)-1;if(n-o+3>=p){const d=2**p;f={x:s.srcResolution.x*d,y:s.srcResolution.y*d}}}f&&(r.srcResolution=f,this._updateSourceDataInfo(t,r))}return(r.srcWidth/e>Ie||r.srcHeight/i>Ie)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:s,datumTransformation:r}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:u}=He(s,this.rasterInfo,this.ioConfig.sampling);if(u)return;let o=e.srcExtent||Ce(t,i,r);if(o==null)return;const l=X(this.rasterInfo.transform);l&&(o=l.inverseTransform(o)),e.srcExtent=o;const c=Math.ceil((o.xmax-o.xmin)/a.x-.1),h=Math.ceil((o.ymax-o.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=c,e.srcHeight=h}_getRequestOptionsWithSliceId(t){return P(this.rasterInfo.multidimensionalInfo)&&t.sliceId==null&&(t=L(B({},t),{sliceId:this.getSliceIndex(t.multidimensionalDefinition)})),t}};I([S()],U.prototype,"_rasterTileAlighmentInfo",void 0),I([S(Ye)],U.prototype,"url",null),I([S({type:String,json:{write:!0}})],U.prototype,"datasetName",void 0),I([S({type:String,json:{write:!0}})],U.prototype,"datasetFormat",void 0),I([S()],U.prototype,"rasterInfo",void 0),I([S()],U.prototype,"ioConfig",void 0),I([S()],U.prototype,"sourceJSON",void 0),U=I([K("esri.layers.support.rasterDatasets.BaseRaster")],U);const he=U;function mi(t){const e=t.fields,i=t.records,s=e.some(l=>l.name.toLowerCase()==="oid")?"OBJECTID":"OID",r=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(l=>({name:l.name,type:"esriFieldType"+l.typeName,alias:l.name}))),n=r.map(l=>l.name),a=[];let u=0,o=0;return i.forEach(l=>{const c={};for(c[s]=u++,o=1;o<n.length;o++)c[n[o]]=l[o-1];a.push({attributes:c})}),{displayFieldName:"",fields:r,features:a}}class pi{static get supportedVersions(){return[5]}static parse(e){const i=new DataView(e),s=3&i.getUint8(0);if(s!==3)return{header:{version:s},recordSet:null};const r=i.getUint32(4,!0),n=i.getUint16(8,!0),a=i.getUint16(10,!0),u={version:s,recordCount:r,headerByteCount:n,recordByteCount:a};let o=32;const l=[],c=[];let h;if(s===3){for(;i.getUint8(o)!==13;)h=String.fromCharCode(i.getUint8(o+11)).trim(),l.push({name:Ae(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:i.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<r&&e.byteLength-o>a;){const m=[];i.getUint8(o)===32?(o+=1,l.forEach(f=>{if(f.type==="C")m.push(Ae(new Uint8Array(e,o,f.length)).trim());else if(f.type==="N")m.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim(),10));else if(f.type==="F")m.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim()));else if(f.type==="D"){const g=String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim();m.push(new Date(parseInt(g.substring(0,4),10),parseInt(g.substring(4,6),10)-1,parseInt(g.substring(6,8),10)))}o+=f.length}),c.push(m)):o+=a}}return{header:u,fields:l,records:c,recordSet:mi({fields:l,records:c})}}}const se=new Map;se.set("int16","esriFieldTypeSmallInteger"),se.set("int32","esriFieldTypeInteger"),se.set("int64","esriFieldTypeInteger"),se.set("float32","esriFieldTypeSingle"),se.set("float64","esriFieldTypeDouble"),se.set("text","esriFieldTypeString");const je=8;let fe=class extends he{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(t){await this.init();const{data:e}=await this.request(this.url+"/conf.json",{signal:t==null?void 0:t.signal});if(!this._validateHeader(e))throw new $("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:s}=this._parseHeader(e);if(s.dataType==="thematic"){const r=await this._fetchAuxiliaryInformation();s.attributeTable=r}this._set("storageInfo",i),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(t,e,i,s={}){const r=this.rasterInfo.storageInfo.maximumPyramidLevel-t;if(r<0)return null;const n=this._buildCacheFilePath(r,e,i,s.multidimensionalDefinition),a=this._getIndexRecordFromBundle(e,i),u=await this.request(n,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!u)return null;const o=new Uint8Array(u.data),l=this._getTileEndAndContentType(o,a);if(l.recordSize===0)return null;const c=await this.request(n,{range:{from:l.position,to:l.position+l.recordSize},responseType:"array-buffer",signal:s.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(t){const e=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return t&&t.type==="RasterInfo"&&!e.some(i=>!t[i])}_parseHeader(t){var e,i;const s=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:r,histograms:n,colormap:a,blockWidth:u,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=t,h=t.statistics&&t.statistics.map(D=>({min:D.min,max:D.max,avg:D.mean,stddev:D.standardDeviation,median:D.median,mode:D.mode})),m=t.extent.spatialReference,f=(e=t.geodataXform)==null?void 0:e.spatialReference,g=new Y(m!=null&&m.wkid||m!=null&&m.wkt?m:f);let p=new W({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:g});const d=new N({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:g}),y=Math.round((p.xmax-p.xmin)/d.x),x=Math.round((p.ymax-p.ymin)/d.y),v=this._parseTransform(t.geodataXform),_=v?p:null;v&&(p=v.forwardTransform(p),d.x=(p.xmax-p.xmin)/y,d.y=(p.ymax-p.ymin)/x);const w=(i=t.properties)!=null?i:{},T=t.format.toLowerCase().replace("cache/",""),b=new N(t.origin.x,t.origin.y,g);let C,R,M,A;if(a&&a.colors)for(C=[],R=0;R<a.colors.length;R++)M=a.colors[R],A=a.values?a.values[R]:R,C.push([A,255&M,M<<16>>>24,M<<8>>>24,M>>>24]);const F=t.LODInfos,q=[];for(R=0;R<F.levels.length;R++)q.push({level:F.levels[R],resolution:F.resolutions[R],scale:96/.0254*F.resolutions[R]});const E=new le({dpi:96,lods:q,format:T,origin:b,size:[u,o],spatialReference:g}),ae={recordSize:je,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*je+64},j=[{maxCol:Math.ceil(y/u)-1,maxRow:Math.ceil(x/o)-1,minCol:0,minRow:0}];let k=2;if(c>0)for(R=0;R<c;R++)j.push({maxCol:Math.ceil(y/k/u)-1,maxRow:Math.ceil(x/k/o)-1,minCol:0,minRow:0}),k*=2;const Z=t.mdInfo;return{storageInfo:ae,rasterInfo:new ue({width:y,height:x,pixelType:s,bandCount:r,extent:p,nativeExtent:_,transform:v,spatialReference:g,pixelSize:d,keyProperties:w,statistics:h,histograms:n,multidimensionalInfo:Z,colormap:C,storageInfo:new ge({blockWidth:u,blockHeight:o,pyramidBlockWidth:u,pyramidBlockHeight:o,origin:b,tileInfo:E,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:j})})}}_parseTransform(t){var e,i;if(!ai(t))throw new $("cloudraster:open","the data contains unsupported geodata transform types");const s=oi(t);if(s.type==="identity")return null;if(s.type!=="polynomial"||(e=s.forwardCoefficients)==null||!e.length||(i=s.inverseCoefficients)==null||!i.length)throw new $("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return s}async _fetchAuxiliaryInformation(t){const e=this.request(this.url+"/conf.vat.json",{signal:t}).then(n=>n.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then(n=>n.data).catch(()=>null),s=await Promise.all([e,i]);let r;if(s[0]){let n=s[0].fields;const a=s[0].values;if(n&&a){n=n.map(o=>({type:o.name==="OID"?"esriFieldTypeOID":se.get(o.type),name:o.name,alias:o.alias||o.name}));const u=a.map(o=>({attributes:o}));n&&a&&(r={fields:n,features:u})}}return!r&&s[1]&&(r=pi.parse(s[1]).recordSet),Ze.fromJSON(r)}_buildCacheFilePath(t,e,i,s){const r=this.storageInfo.packetSize,n=Math.floor(e/r)*r,a=Math.floor(i/r)*r,u="R"+this._toHexString4(n)+"C"+this._toHexString4(a);let o="L";o+=t>=10?t.toString():"0"+t.toString();const{multidimensionalInfo:l}=this.rasterInfo,c=s==null?void 0:s[0];if(!P(l)||!c)return`${this.url}/_alllayers/${o}/${u}.bundle`;let h=l.variables.filter(f=>f.name===c.variableName)[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const m=4-h.length;for(let f=0;f<m;f++)h="0"+h;return h="S"+h,`${this.url}/_alllayers/${c.variableName}/${h}/${o}/${u}.bundle`}_getIndexRecordFromBundle(t,e){const i=this.storageInfo.packetSize,s=i*(t%i)+e%i;if(s<0)throw"Invalid level / row / col";return 20+s*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){const i=t.subarray(e,e+8);let s,r=0;for(s=0;s<5;s++)r|=(255&i[s])<<8*s;const n=1099511627775&r;for(r=0,s=5;s<8;s++)r|=(255&i[s])<<8*(s-5);return{position:n,recordSize:1099511627775&r}}_toHexString4(t){let e=t.toString(16);if(e.length!==4){let i=4-e.length;for(;i-- >0;)e="0"+e}return e}};I([S({readOnly:!0})],fe.prototype,"storageInfo",void 0),I([S({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=I([K("esri.layers.support.rasterDatasets.CloudRaster")],fe);const gi=fe;let de=class extends he{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(t){var e;await this.init();const{pixelBlock:i,statistics:s,histograms:r,name:n,keyProperties:a,nativeExtent:u,transform:o}=this.data,{width:l,height:c,pixelType:h}=i,m=this.data.extent||new W({xmin:-.5,ymin:.5,xmax:l-.5,ymax:c-.5,spatialReference:new Y({wkid:3857})}),f=(e=this.data.isPseudoSpatialReference)!=null?e:!this.data.extent,g={x:m.width/l,y:m.height/c},p=new ue({width:l,height:c,pixelType:h,extent:m,nativeExtent:u,transform:o,pixelSize:g,spatialReference:m.spatialReference,bandCount:3,keyProperties:a||{},statistics:s,isPseudoSpatialReference:f,histograms:r});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},t),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(t,e,i,s={}){const r=this._pixelBlockTiles.get(`${t}/${e}/${i}`);return Promise.resolve(r)}async _buildInMemoryRaster(t,e,i){const s=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:s},i):Promise.resolve(jt(t,e,s)),n=P(this.rasterInfo.statistics),a=P(this.rasterInfo.histograms),u=n&&a?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):Promise.resolve(Ut(t)),o=await Qe([r,u]);if(!o[0].value&&o[1].value)throw new $("inmemory-raster:open","failed to build in memory raster");var l,c;this._pixelBlockTiles=o[0].value,n||(this.rasterInfo.statistics=(l=o[1].value)==null?void 0:l.statistics),a&&(this.rasterInfo.histograms=(c=o[1].value)==null?void 0:c.histograms)}};I([S({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),I([S()],de.prototype,"data",void 0),de=I([K("esri.layers.support.rasterDatasets.InMemoryRaster")],de);const yi=de;function ce(t,e){if(!t||!e)return[];let i=e;e.indexOf("/")>-1?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const s=[];if(e){const n=ce(t,i);for(let a=0;a<n.length;a++)ce(n[a],e).forEach(u=>s.push(u));return s}const r=t.getElementsByTagNameNS("*",i);if(!r||r.length===0)return[];for(let n=0;n<r.length;n++)s.push(r[n]||r.item[n]);return s}function J(t,e){if(!t||!e)return null;let i=e;e.indexOf("/")>-1?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const s=ce(t,i);return s.length>0?e?J(s[0],e):s[0]:null}function V(t,e=null){const i=e?J(t,e):t;let s;return i?(s=i.textContent||i.nodeValue,s?s.trim():null):null}function xi(t,e){const i=ce(t,e),s=[];let r;for(let n=0;n<i.length;n++)r=i[n].textContent||i[n].nodeValue,r&&(r=r.trim(),r!==""&&s.push(r));return s}function ve(t,e){return xi(t,e).map(i=>Number(i))}function re(t,e){const i=V(t,e);return Number(i)}function _e(t,e){var i;const s=t==null||(i=t.nodeName)==null?void 0:i.toLowerCase(),r=e.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===r}function Ue(t,e){if(!t||!e)return null;const i=[];for(let s=0;s<t.length;s++)i.push(t[s]),i.push(e[s]);return i}function Ii(t){var e;const i=J(t,"GeodataXform"),s=Te(re(i,"SpatialReference/WKID")||V(i,"SpatialReference/WKT"));if(i.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:s,transform:null};const r=(e=re(i,"PolynomialOrder"))!=null?e:1,n=ve(i,"CoeffX/Double"),a=ve(i,"CoeffY/Double"),u=ve(i,"InverseCoeffX/Double"),o=ve(i,"InverseCoeffY/Double"),l=Ue(n,a),c=Ue(u,o);return{spatialReference:s,transform:new Pe({spatialReference:s,polynomialOrder:r,forwardCoefficients:l,inverseCoefficients:c})}}function vi(t){var e;const i=re(t,"NoDataValue"),s=J(t,"Histograms/HistItem"),r=re(s,"HistMin"),n=re(s,"HistMax"),a=re(s,"BucketCount"),u=(e=V(s,"HistCounts"))==null?void 0:e.split("|").map(f=>Number(f));let o,l,c,h;ce(t,"Metadata/MDI").forEach(f=>{var g;const p=Number((g=f.textContent)!=null?g:f.nodeValue);switch(f.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=p;break;case"STATISTICS_MAXIMUM":l=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":h=p}});const m=re(t,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:u!=null&&u.length&&o!=null&&l!=null?{min:r,max:n,size:a||u.length,counts:u}:null,sourceBandIndex:m,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:h}:null}}function Te(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new Y({wkid:e});if((t=String(t)).startsWith("COMPD_CS")){if(!t.includes("VERTCS")||!t.includes("GEOGCS")&&!t.startsWith("PROJCS"))return null;const i=t.indexOf("VERTCS"),s=t.indexOf("PROJCS"),r=s>-1?s:t.indexOf("GEOGCS");if(r===-1)return null;const n=t.slice(r,t.lastIndexOf("]",i)+1).trim(),a=t.slice(i,t.lastIndexOf("]")).trim();e=ke(n);const u=new Y(e?{wkid:e}:{wkt:n}),o=ke(a);return o&&(u.vcsWkid=o),u}return t.startsWith("GEOGCS")||t.startsWith("PROJCS")?(e=ke(t),new Y(e!==0?{wkid:e}:{wkt:t})):null}function ke(t){var e;const i=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>n!==""),s=i[i.length-1].split(","),r=(e=s[0])==null?void 0:e.toLowerCase();if((r==="epsg"||r==="esri")&&t.endsWith('"]]')){const n=Number(s[1]);if(!isNaN(n)&&n!==0)return n}return 0}function Fe(t){var e;if((t==null||(e=t.documentElement.tagName)==null?void 0:e.toLowerCase())!=="pamdataset")return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(r=>{if(r.nodeType===1){if(_e(r,"SRS")){if(!i.spatialReference){const n=V(r);i.spatialReference=Te(n)}}else if(_e(r,"Metadata"))if(r.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Ii(r);i.transform=a,i.spatialReference||(i.spatialReference=n)}else ce(r,"MDI").forEach(n=>i.metadata[n.getAttribute("key")]=V(n));else if(_e(r,"PAMRasterBand")){const n=vi(r);n.sourceBandIndex!=null&&i.rasterBands[n.sourceBandIndex]==null?i.rasterBands[n.sourceBandIndex]=n:i.rasterBands.push(n)}}});const s=i.rasterBands;if(s){const r=!!s[0].statistics;i.statistics=r?s.map(a=>a.statistics):null;const n=!!s[0].histogram;i.histograms=n?s.map(a=>a.histogram):null}return i}let Se=class extends he{async open(t){await this.init();const e=await this._fetchData(t);let{spatialReference:i,statistics:s,histograms:r,transform:n}=await this._fetchAuxiliaryData(t);const a=!i;a&&(i=new Y({wkid:3857})),r!=null&&r.length&&s==null&&(s=Me(r));const{width:u,height:o}=e;let l=new W({xmin:-.5,ymin:.5-o,xmax:u-.5,ymax:.5,spatialReference:i});const c=n?n.forwardTransform(l):l;let h=!0;if(n){const f=n.forwardCoefficients;h=f&&f[1]===0&&f[2]===0,h&&(n=null,l=c)}const m=new yi({data:{extent:c,nativeExtent:l,transform:n,pixelBlock:e,statistics:s,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await m.open(),this._set("rasterInfo",m.rasterInfo),this._inMemoryRaster=m}fetchRawTile(t,e,i,s={}){return this._inMemoryRaster.fetchRawTile(t,e,i,s)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t==null?void 0:t.signal}),i=Gt(e).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new $("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(e,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(t){var e,i;const s=X(t==null?void 0:t.signal),r=(e=this.ioConfig.skipExtensions)!=null?e:[],n=r.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:s}),a=this.datasetFormat,u=a==="JPG"?"jgw":a==="PNG"?"pgw":a==="BMP"?"bpw":null,o=r.indexOf(u)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+u,{responseType:"text",signal:s}),l=await Qe([n,o]);if(s!=null&&s.aborted)throw ht();const c=Fe((i=l[0].value)==null?void 0:i.data);if(!c.transform){const h=l[1].value?l[1].value.data.split(`
`).slice(0,6).map(m=>Number(m)):null;c.transform=(h==null?void 0:h.length)===6?new Pe({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return c}};I([S({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=I([K("esri.layers.support.rasterDatasets.ImageAuxRaster")],Se);const we=Se;let me=class extends he{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(t){await this.init();const e=t&&t.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new $("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new $("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const r=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=s.cacheType,this.tileType==null&&(r.indexOf(s.tileInfo.format.toLowerCase())>-1?this.tileType="Map":s.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name.slice(s.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:e});if(!P(n))throw new $("image-server-raster:open","cannot initialize image service");{const a=this.tileType==="Map"?ft(s.tileInfo,s):le.fromJSON(s.tileInfo),{extent:u,pixelSize:o}=n,l=.5/n.width*o.x;let c,h;const m=a.lodAt(Math.max.apply(null,a.lods.map(w=>w.level)));this.tileType!=="Map"&&s.maxScale!==0&&(this.tileType==="Raster"?(c=a.lods.filter(w=>w.resolution===o.x)[0],c||(c=a.lods[a.lods.length-1])):(c=a.lods.filter(w=>Math.abs(w.scale-s.maxScale)<l)[0],c||(c=a.lods.filter(w=>w.scale>s.maxScale).sort((w,T)=>w.scale>T.scale?1:-1)[0])),o.x=o.y=c.resolution,n.width=Math.ceil((u.xmax-u.xmin)/o.x-.1),n.height=Math.ceil((u.ymax-u.ymin)/o.y-.1)),c||(c=m);const f=a.lodAt(Math.min.apply(null,a.lods.map(w=>w.level)));this.tileType==="Map"?this._levelOffset=a.lods[0].level:s.minScale!==0&&this.tileType==="Elevation"&&(h=a.lods.filter(w=>Math.abs(w.scale-s.minScale)<l)[0],this._levelOffset=h.level-f.level),h||(h=f);const g=Math.max(o.x,o.y);(Math.abs(o.x-o.y)>l||!a.lods.some(w=>Math.abs(w.resolution-g)<l))&&(o.x=o.y=c.resolution,n.width=Math.ceil((u.xmax-u.xmin)/o.x-.1),n.height=Math.ceil((u.ymax-u.ymin)/o.y-.1));const p=c.level-h.level,[d,y]=a.size,x=[];a.lods.forEach(w=>{w.level>=h.level&&w.level<=c.level&&x.push({x:w.resolution,y:w.resolution})}),x.sort((w,T)=>w.x-T.x);const v=this.computeBlockBoundary(u,d,y,a.origin,x,p),_=x.length>1?x.slice(1):null;n.storageInfo=new ge({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:_,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:a,blockBoundary:v}),this._fixGCSShift(n),this._set("rasterInfo",n)}if(s.capabilities.toLowerCase().indexOf("tilemap")>-1){const a={tileInfo:n.storageInfo.tileInfo,parsedUrl:dt(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new mt({layer:a})}}async fetchRawTile(t,e,i,s={}){if(this._slices&&s.sliceId==null)return null;const{storageInfo:r,extent:n}=this.rasterInfo,a=r.maximumPyramidLevel-t+this._levelOffset,u=`${this.url}/tile/${a}/${e}/${i}`,o=this._slices?{sliceId:s.sliceId||0}:null,{data:l}=await this.request(u,{query:o,responseType:"array-buffer",signal:s.signal});if(!l)return null;const c=await this.decodePixelBlock(l,{width:r.tileInfo.size[0],height:r.tileInfo.size[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation"}),h=r.blockBoundary[t];if(r.compression!=="jpg"||i>h.minCol&&i<h.maxCol&&e>h.minRow&&e<h.maxRow)return c;const{origin:m,blockWidth:f,blockHeight:g}=r,{x:p,y:d}=this.getPyramidPixelSize(t),y=Math.round((n.xmin-m.x)/p)%f,x=Math.round((n.xmax-m.x)/p)%f,v=Math.round((m.y-n.ymax)/d)%g,_=Math.round((m.y-n.ymin)/d)%g,w=i===h.minCol?y:0,T=e===h.minRow?v:0,b=i===h.maxCol?x:f,C=e===h.maxRow?_:g;return Vt(c,{x:w,y:T},{width:b-w,height:C-T}),c}getSliceIndex(t){if(!this._slices||z(t)||t.length===0)return null;const e=t;for(let i=0;i<this._slices.length;i++){const s=this._slices[i].multidimensionalDefinition;if(s.length===e.length&&!s.some(r=>{const n=e.filter(a=>r.variableName===a.variableName&&a.dimensionName===r.dimensionName)[0];return n?(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return i}return null}async fetchVariableStatisticsHistograms(t,e){const i=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.statistics}),s=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.histograms}),r=await Promise.all([i,s]);return r[0]&&r[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(t,0,X(e.datumTransformation));if(i===null)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let n=r-s+this._levelOffset;const a=i.srcLocation;for(;n>=0;){try{if(await this._tilemapCache.fetchAvailability(n,i.row,i.col,e)==="available")break}catch{}if(n--,s++,i=this.identifyPixelLocation(a,s,X(e.datumTransformation)),i===null)return null}return n===-1||i==null?null:s}async _fetchRasterInfo(t){const e=this.sourceJSON,i=Math.ceil((e.extent.xmax-e.extent.xmin)/e.pixelSizeX-.1),s=Math.ceil((e.extent.ymax-e.extent.ymin)/e.pixelSizeY-.1),r=Y.fromJSON(e.spatialReference||e.extent.spatialReference);if(this.tileType==="Map")return new ue({width:i,height:s,bandCount:3,extent:W.fromJSON(e.extent),spatialReference:r,pixelSize:new N({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:r}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:n,signal:a}=t,u=!!e.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:n,f:"json"},signal:a}).then(f=>Ze.fromJSON(f.data)).catch(()=>null),o=!!e.hasColormap&&this.request(this.url+"/colormap",{query:{slice:n,f:"json"},signal:a}).then(f=>{var g;return(g=f.data)==null?void 0:g.colormap}),l=!!e.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:n,f:"json"},signal:a}).then(f=>{var g;return(g=f.data)==null?void 0:g.histograms}),c=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then(f=>f.data).catch(()=>{}),h=!!e.hasMultidimensions&&this._fetchMultidimensionalInfo(),m=!!e.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then(f=>f.data&&f.data.slices).catch(()=>{});return Promise.all([u,o,l,c,h,m]).then(f=>{let g=null;if(e.minValues&&e.minValues.length===e.bandCount){g=[];for(let p=0;p<e.minValues.length;p++)g.push({min:e.minValues[p],max:e.maxValues[p],avg:e.meanValues[p],stddev:e.stdvValues[p]})}return this._slices=f[5]||null,new ue({width:i,height:s,bandCount:e.bandCount,extent:W.fromJSON(e.extent),spatialReference:r,pixelSize:new N({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:r}),pixelType:e.pixelType.toLowerCase(),statistics:g,attributeTable:f[0]||null,colormap:f[1]||null,histograms:f[2]||null,keyProperties:f[3]||{},multidimensionalInfo:f[4]||null})})}async _fetchMultidimensionalInfo(t){var e;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:t}).then(s=>{var r;return(r=s.data)==null?void 0:r.multidimensionalInfo});return(e=i.variables)!=null&&e.length&&i.variables.forEach(s=>{var r;(r=s.statistics)!=null&&r.length&&s.statistics.forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation})}),i}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_fixGCSShift(t){const{extent:e,spatialReference:i}=t;e.xmin===0&&e.xmax===360&&i.wkid&&i.isGeographic&&(t.nativeExtent=t.extent,t.transform=new li,t.extent=t.transform.forwardTransform(e))}};I([S({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),I([S()],me.prototype,"tileType",void 0),me=I([K("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const wi=me,G=new Map;G.set("Int8","s8"),G.set("UInt8","u8"),G.set("Int16","s16"),G.set("UInt16","u16"),G.set("Int32","s32"),G.set("UInt32","u32"),G.set("Float32","f32"),G.set("Float64","f32"),G.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let oe=class extends he{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){var e;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=t?X(t.signal):null,s=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:n}=this._parseHeader(s.data);if(((e=this.ioConfig.skipExtensions)==null?void 0:e.indexOf("aux.xml"))===-1){const y=await this._fetchAuxiliaryData(t);var a;y!=null&&(r.statistics=(a=y.statistics)!=null?a:r.statistics,r.histograms=y.histograms,y.histograms&&!P(r.statistics)&&(r.statistics=Me(y.histograms)))}this._set("rasterInfo",r),this._files=n;const u=await this.request(n.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(u.data);const{blockWidth:o,blockHeight:l}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:m}=this.rasterInfo,f=[],g=this._getBandSegmentCount();let p=0,d=-1;for(;p<this._storageIndex.length;){d++;const y=Math.ceil(h/o/c**d)-1,x=Math.ceil(m/l/c**d)-1;p+=1*y*(1*x)*g*4,f.push({maxRow:x,maxCol:y,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,d>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=d),this.updateTileInfo()}async fetchRawTile(t,e,i,s={}){const{blockWidth:r,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,u=a[t];if(!u||u.maxRow<e||u.maxCol<i||u.minRow>e||u.minCol>i)return null;const{bandCount:o,pixelType:l}=this.rasterInfo,{ranges:c,actualTileWidth:h,actualTileHeight:m}=this._getTileLocation(t,e,i);if(!c||c.length===0)return null;if(c[0].from===0&&c[0].to===0){const R=new Uint8Array(r*n);return new ui({width:r,height:n,pixels:null,mask:R,validPixelCount:0})}const{bandIds:f}=this.ioConfig,g=this._getBandSegmentCount(),p=[];let d=0;for(d=0;d<g;d++)(!f||f.indexOf[d]>-1)&&p.push(this.request(this._files.data,{range:{from:c[d].from,to:c[d].to},responseType:"array-buffer",signal:s.signal}));const y=await Promise.all(p),x=y.map(R=>R.data.byteLength).reduce((R,M)=>R+M),v=new Uint8Array(x);let _=0;for(d=0;d<g;d++)v.set(new Uint8Array(y[d].data),_),_+=y[d].data.byteLength;const w=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,T=await this.decodePixelBlock(v.buffer,{width:r,height:n,format:w,planes:(f==null?void 0:f.length)||o,pixelType:l});if(P(this.rasterInfo.noDataValue)&&w!=="lerc"&&!T.mask){const R=this.rasterInfo.noDataValue[0];if(R!=null){const M=T.width*T.height,A=new Uint8Array(M);if(Math.abs(R)>1e24)for(d=0;d<M;d++)Math.abs((T.pixels[0][d]-R)/R)>1e-6&&(A[d]=1);else for(d=0;d<M;d++)T.pixels[0][d]!==R&&(A[d]=1);T.mask=A}}let b=0,C=0;if(h!==r||m!==n){let R=T.mask;if(R)for(d=0;d<n;d++)if(C=d*r,d<m)for(b=h;b<r;b++)R[C+b]=0;else for(b=0;b<r;b++)R[C+b]=0;else for(R=new Uint8Array(r*n),T.mask=R,d=0;d<m;d++)for(C=d*r,b=0;b<h;b++)R[C+b]=1}return T}_parseIndex(t){if(t.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let e,i,s,r,n,a;if(Yt){for(i=new Uint8Array(t),r=new ArrayBuffer(t.byteLength),s=new Uint8Array(r),n=0;n<t.byteLength/4;n++)for(a=0;a<4;a++)s[4*n+a]=i[4*n+3-a];e=new Uint32Array(r)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,i){const{blockWidth:s,blockHeight:r,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:u}=this.rasterInfo,o=this._getBandSegmentCount();let l,c,h,m=0,f=0;for(h=0;h<t;h++)f=n**h,l=Math.ceil(a/s/f),c=Math.ceil(u/r/f),m+=l*c;f=n**t,l=Math.ceil(a/s/f),c=Math.ceil(u/r/f),m+=e*l+i,m*=4*o;const g=this._storageIndex.subarray(m,m+4*o);let p=0,d=0;const y=[];for(let x=0;x<o;x++)p=g[4*x+0]*2**32+g[4*x+1],d=p+g[4*x+2]*2**32+g[4*x+3],y.push({from:p,to:d});return{ranges:y,actualTileWidth:i<l-1?s:Math.ceil(a/f)-s*(l-1),actualTileHeight:e<c-1?r:Math.ceil(u/f)-r*(c-1)}}_parseHeader(t){const e=J(t,"MRF_META/Raster");if(!e)throw new $("mrf:open","not a valid MRF format");const i=J(e,"Size"),s=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),a=(V(e,"Compression")||"none").toLowerCase();if(!ee.has(a))throw new $("mrf:open","currently does not support compression "+a);const u=V(e,"DataType")||"UInt8",o=G.get(u);if(o==null)throw new $("mrf:open","currently does not support pixel type "+u);const l=J(e,"PageSize"),c=parseInt(l.getAttribute("x"),10),h=parseInt(l.getAttribute("y"),10),m=J(e,"DataValues");let f,g;if(m&&(g=m.getAttribute("NoData"),g!=null&&(f=g.trim().split(" ").map(E=>parseFloat(E)))),J(t,"MRF_META/CachedSource"))throw new $("mrf:open","currently does not support MRF referencing other data files");const p=J(t,"MRF_META/GeoTags"),d=J(p,"BoundingBox");if(d==null)throw new $("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const y=parseFloat(d.getAttribute("minx")),x=parseFloat(d.getAttribute("miny")),v=parseFloat(d.getAttribute("maxx")),_=parseFloat(d.getAttribute("maxy")),w=V(p,"Projection")||"",T=V(t,"datafile"),b=V(t,"IndexFile");let C;if(w!=="LOCAL_CS[]")if(w.toLowerCase().startsWith("epsg:")){const E=Number(w.slice(5));isNaN(E)||E===0||(C=new Y({wkid:E}))}else C=Te(w);const R=new W(y,x,v,_);R.spatialReference=C;const M=J(t,"MRF_META/Rsets"),A=parseInt(M&&M.getAttribute("scale")||"2",10),F=new ge({origin:new N({x:R.xmin,y:R.ymax,spatialReference:C}),blockWidth:c,blockHeight:h,pyramidBlockWidth:c,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:A}),q=new N({x:(v-y)/s,y:(_-x)/r,spatialReference:C});return{rasterInfo:new ue({width:s,height:r,extent:R,spatialReference:C,bandCount:n,pixelType:o,pixelSize:q,noDataValue:f,storageInfo:F}),files:{mrf:this.url,index:b||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",ee.get(a).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Fe(e)}catch{return null}}};I([S()],oe.prototype,"_files",void 0),I([S()],oe.prototype,"_storageIndex",void 0),I([S({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=I([K("esri.layers.support.rasterIO.MRFRaster")],oe);const bi=oe,Ge=function(t,e){const i=t.get(e);return i&&i.values},be=function(t,e){const i=t.get(e);return i&&i.values[0]};let ne=class extends he{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(t){var e,i,s;await this.init();const r=t?X(t.signal):null,{data:n}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:r});if(!n)throw new $("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:a,firstIFD:u,isBigTiff:o}=Xt(n),l=[];await this.readIFDs(l,n,a,u,0,o?8:4,r);const c=Kt(l),{width:h,height:m,tileWidth:f,tileHeight:g,planes:p,pixelType:d,compression:y,firstPyramidLevel:x,maximumPyramidLevel:v,pyramidBlockWidth:_,pyramidBlockHeight:w,tileBoundary:T,affine:b,metadata:C}=c,R=((e=c.extent.spatialReference)==null?void 0:e.wkt)||((i=c.extent.spatialReference)==null?void 0:i.wkid);let M=Te(R),A=!1;M==null&&(A=!0,M=new Y({wkid:3857}));const F=new W(L(B({},c.extent),{spatialReference:M})),q=new N(F?{x:F.xmin,y:F.ymax,spatialReference:M}:{x:0,y:0}),E=new ge({blockWidth:f,blockHeight:g,pyramidBlockWidth:_,pyramidBlockHeight:w,compression:y,origin:q,firstPyramidLevel:x,maximumPyramidLevel:v,blockBoundary:T}),ae=new N({x:(F.xmax-F.xmin)/h,y:(F.ymax-F.ymin)/m,spatialReference:M}),j=C?{BandProperties:C.bandProperties,DataType:C.dataType}:{},k=new ue({width:h,height:m,bandCount:p,pixelType:d,compression:y,pixelSize:ae,storageInfo:E,spatialReference:M,isPseudoSpatialReference:A,keyProperties:j,extent:F,statistics:C?C.statistics:null});if(b!=null&&b.length&&(k.nativeExtent=new W({xmin:-.5,ymin:.5-m,xmax:h-.5,ymax:.5,spatialReference:M}),k.transform=new Pe({polynomialOrder:1,forwardCoefficients:[b[2]+b[0]/2,b[5]-b[3]/2,b[0],b[3],-b[1],-b[4]]}),k.extent=k.transform.forwardTransform(k.nativeExtent),k.pixelSize=new N({x:(F.xmax-F.xmin)/h,y:(F.ymax-F.ymin)/m,spatialReference:M}),E.origin.x=-.5,E.origin.y=.5),(s=this.ioConfig.skipExtensions)==null||!s.includes("aux.xml")){const D=await this._fetchAuxiliaryData(t);if(D!=null){var Z;if(k.statistics=(Z=D.statistics)!=null?Z:k.statistics,k.histograms=D.histograms,D.histograms&&!P(k.statistics)&&(k.statistics=Me(D.histograms)),D.transform&&!b){k.transform=D.transform,k.nativeExtent=k.extent;const Q=k.transform.forwardTransform(k.nativeExtent);k.pixelSize=new N({x:(Q.xmax-Q.xmin)/h,y:(Q.ymax-Q.ymin)/m,spatialReference:M}),k.extent=Q}k.spatialReference||(k.spatialReference=D.spatialReference)}}if(this._set("rasterInfo",k),this._headerInfo=B({littleEndian:a,isBigTiff:o,ifds:l},c),!this._headerInfo.isSupported)throw new $("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(t,e,i,s={}){var r;if((r=this._headerInfo)==null||!r.isSupported||this.isBlockOutside(t,e,i))return null;const n=this.getTileLocation(t,e,i);if(!n)return null;const{ranges:a,actualTileWidth:u,actualTileHeight:o,ifd:l}=n,c=a.map(T=>this.request(this.url,{range:T,responseType:"array-buffer",signal:s.signal})),h=await Promise.all(c),m=h.map(T=>T.data.byteLength).reduce((T,b)=>T+b),f=h.length===1?h[0].data:new ArrayBuffer(m),g=[0],p=[0];if(h.length>1){const T=new Uint8Array(f);for(let b=0,C=0;b<h.length;b++){const R=h[b].data;T.set(new Uint8Array(R),C),g[b]=C,C+=R.byteLength,p[b]=R.byteLength}}const{blockWidth:d,blockHeight:y}=this.getBlockWidthHeight(t),x=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:g,sizes:p},width:d,height:y,planes:null,pixelType:null});let v,_,w;if(u!==d||o!==y){let T=x.mask;if(T)for(v=0;v<y;v++)if(w=v*d,v<o)for(_=u;_<d;_++)T[w+_]=0;else for(_=0;_<d;_++)T[w+_]=0;else for(T=new Uint8Array(d*y),x.mask=T,v=0;v<o;v++)for(w=v*d,_=0;_<u;_++)T[w+_]=1}return x}async readIFDs(t,e,i,s,r,n=4,a){if(!s)return null;(s>=e.byteLength||s<0)&&(e=(await this.request(this.url,{range:{from:s+r,to:s+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=s+r,s=0);const u=await this.readIFD(e,i,s,r,xe.TIFF_TAGS,n,a);if(t.push(u.ifd),!u.nextIFD)return null;await this.readIFDs(t,e,i,u.nextIFD-r,r,n,a)}async readIFD(t,e,i,s,r=xe.TIFF_TAGS,n=4,a){if(!t)return null;const u=Zt(t,e,i,s,r,n);if(u.success){const o=[];if(u.ifd.forEach(l=>{l.values||o.push(l)}),o.length>0){const l=o.map(h=>h.offlineOffsetSize),c=Math.min.apply(null,l.map(h=>h[0]));if(Math.min.apply(null,l.map(h=>h[0]+h[1]))-c<=this._bufferSize){const{data:h}=await this.request(this.url,{range:{from:c,to:c+this._bufferSize},responseType:"array-buffer",signal:a});t=h,s=c,o.forEach(m=>Qt(t,e,m,s))}}if(u.ifd.has("GEOKEYDIRECTORY")){const l=u.ifd.get("GEOKEYDIRECTORY"),c=l.values;if(c&&c.length>4){const h=c[0]+"."+c[1]+"."+c[2],m=await this.readIFD(t,e,l.valueOffset+6-s,s,xe.GEO_KEYS,2,a);l.data=m.ifd,l.data&&l.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[h]})}}return u}if(u.requiredBufferSize&&u.requiredBufferSize!==t.byteLength)return(t=(await this.request(this.url,{range:{from:s,to:s+u.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<u.requiredBufferSize?null:this.readIFD(t,e,0,s,xe.TIFF_TAGS,4,a)}getTileLocation(t,e,i){const{firstPyramidLevel:s,blockBoundary:r}=this.rasterInfo.storageInfo,n=t===0?0:t-(s-1),a=this._headerInfo.ifds[n];if(!a)return null;const u=ei(a,this._headerInfo),o=Ge(a,"TILEOFFSETS");if(o===void 0)return null;const l=Ge(a,"TILEBYTECOUNTS"),{minRow:c,minCol:h,maxRow:m,maxCol:f}=r[n];if(e>m||i>f||e<c||i<h)return null;const g=be(a,"IMAGEWIDTH"),p=be(a,"IMAGELENGTH"),d=be(a,"TILEWIDTH"),y=be(a,"TILELENGTH"),x=u?this.rasterInfo.bandCount:1,v=x*e*(f+1)+i,_=[{from:o[v],to:o[v+x-1]+l[v+x-1]-1}];if(u){let b=!0;for(let C=0;C<x;C++)if(o[v+C]+l[v+C]!==o[v+C+1]){b=!1;break}if(!b)for(let C=0;C<x;C++)_[C]={from:o[v+C],to:o[v+C]+l[v+C]-1}}const w=o[v],T=l[v];return w==null||T==null?null:{ranges:_,ifd:a,actualTileWidth:i===f?g%d:d,actualTileHeight:e===m?p%y:y}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Fe(e)}catch{return null}}};I([S()],ne.prototype,"_files",void 0),I([S()],ne.prototype,"_headerInfo",void 0),I([S()],ne.prototype,"_bufferSize",void 0),I([S({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),ne=I([K("esri.layers.support.rasterDatasets.TIFFRaster")],ne);const Si=ne,H=new Map;H.set("CRF",{desc:"Cloud Raster Format",constructor:gi}),H.set("MRF",{desc:"Meta Raster Format",constructor:bi}),H.set("TIFF",{desc:"GeoTIFF",constructor:Si}),H.set("RasterTileServer",{desc:"Raster Tile Server",constructor:wi}),H.set("JPG",{desc:"JPG Raster Format",constructor:we}),H.set("PNG",{desc:"PNG Raster Format",constructor:we}),H.set("GIF",{desc:"GIF Raster Format",constructor:we}),H.set("BMP",{desc:"BMP Raster Format",constructor:we});class Ti{static get supportedFormats(){const e=new Set;return H.forEach((i,s)=>e.add(s)),e}static async open(e){const{url:i,ioConfig:s,sourceJSON:r}=e;let n=e.datasetFormat;n==null&&i.lastIndexOf(".")&&(n=i.slice(i.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),i.toLowerCase().indexOf("/imageserver")>-1&&i.toLowerCase().indexOf("/wcsserver")===-1&&(n="RasterTileServer");const a={url:i,sourceJSON:r,datasetFormat:n,ioConfig:s||{bandIds:null,sampling:null}};let u,o;if(this.supportedFormats.has(n))return u=H.get(n).constructor,o=new u(a),await o.open({signal:e.signal}),o;if(n)throw new $("rasterfactory:open","not a supported format "+n);const l=Array.from(H.keys());let c=0;const h=function(){return n=l[c++],n?(u=H.get(n).constructor,o=new u(a),o.open({signal:e.signal}).then(()=>o).catch(()=>h())):null};return h()}static register(e,i,s){H.has(e.toUpperCase())||H.set(e.toUpperCase(),{desc:i,constructor:s})}}let O=class extends pt(gt(yt(xt(It(ci(vt(wt(bt(St))))))))){constructor(...t){super(...t),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(t,e){return typeof t=="string"?B({url:t},e):t}load(t){const e=P(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(Tt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var t,e;let i=[new pe({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const s=(t=this.rasterInfo)==null||(e=t.attributeTable)==null?void 0:e.fields,r="Raster.";if(s){const u=s.filter(o=>o.type!=="oid"&&o.name.toLowerCase()!=="value").map(o=>{const l=o.clone();return l.name=r+o.name,l});i=i.concat(u)}const n=this.rasterInfo.dataType;if((n==="vector-magdir"||n==="vector-uv")&&P(this.rasterInfo.multidimensionalInfo)){var a;const u=(a=this.rasterInfo.multidimensionalInfo.variables[0].unit)==null?void 0:a.trim(),o="Magnitude"+(u?` (${u})`:"");i.push(new pe({name:"Raster.Magnitude",alias:o,domain:null,editable:!1,type:"double"})),i.push(new pe({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return i}set renderer(t){this._set("renderer",t),this.updateRenderer()}readRenderer(t,e,i){const s=e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,r=Et(s,i)||void 0;if(r!=null)return r}createPopupTemplate(t){return Rt({fields:this.rasterFields,title:this.title},t)}write(t,e){const{raster:i}=this;if(this.loaded?i.datasetFormat==="RasterTileServer"&&(i.tileType==="Raster"||i.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e&&e.messages){const s=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new $("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${s}'`,{layer:this}))}return null}async _openRaster(t){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await Ti.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:L(B({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:t});const{rasterInfo:e}=this.raster;if(!e)throw new $("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText),this.sourceJSON.timeInfo&&this._set("timeInfo",Ct.fromJSON(this.sourceJSON.timeInfo))),this.title==null&&(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",i=>this.raster.ioConfig.customFetchParameters=i)}};I([S({type:[_t],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((t=this.bandIds)==null?void 0:t.join(","))!=="0,1,2"}}}}})],O.prototype,"bandIds",void 0),I([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),kt(At)],O.prototype,"interpolation",void 0),I([S({json:{write:!0}})],O.prototype,"multidimensionalDefinition",void 0),I([S(Mt)],O.prototype,"legendEnabled",void 0),I([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],O.prototype,"isReference",void 0),I([S({type:["show","hide"]})],O.prototype,"listMode",void 0),I([S()],O.prototype,"sourceJSON",void 0),I([S({readOnly:!0})],O.prototype,"version",void 0),I([S()],O.prototype,"title",void 0),I([S({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),I([S({type:["ArcGISTiledImageServiceLayer"]})],O.prototype,"operationalLayerType",void 0),I([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,i){e[i]=!t}}}})],O.prototype,"popupEnabled",void 0),I([S({type:Pt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],O.prototype,"popupTemplate",void 0),I([S({readOnly:!0})],O.prototype,"defaultPopupTemplate",null),I([S({readOnly:!0,type:[pe]})],O.prototype,"fields",void 0),I([S({readOnly:!0,type:[pe]})],O.prototype,"rasterFields",null),I([S({types:et,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var t;const e=((t=this.renderer)==null?void 0:t.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!e}}},origins:{"web-scene":{types:zt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="animated-flow"})}}}}})],O.prototype,"renderer",null),I([Ft("renderer")],O.prototype,"readRenderer",null),O=I([K("esri.layers.ImageryTileLayer")],O);const Di=O;export{Di as default};
