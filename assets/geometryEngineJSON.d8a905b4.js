import{G as r}from"./geometryEngineBase.fd888c07.js";import{t as u}from"./json.2d0d6862.js";function s(n){return r.extendedSpatialReferenceInfo(n)}function l(n,e,t){return r.clip(u,n,e,t)}function a(n,e,t){return r.cut(u,n,e,t)}function p(n,e,t){return r.contains(u,n,e,t)}function d(n,e,t){return r.crosses(u,n,e,t)}function g(n,e,t,i){return r.distance(u,n,e,t,i)}function m(n,e,t){return r.equals(u,n,e,t)}function h(n,e,t){return r.intersects(u,n,e,t)}function x(n,e,t){return r.touches(u,n,e,t)}function y(n,e,t){return r.within(u,n,e,t)}function w(n,e,t){return r.disjoint(u,n,e,t)}function A(n,e,t){return r.overlaps(u,n,e,t)}function E(n,e,t,i){return r.relate(u,n,e,t,i)}function j(n,e){return r.isSimple(u,n,e)}function V(n,e){return r.simplify(u,n,e)}function z(n,e,t=!1){return r.convexHull(u,n,e,t)}function I(n,e,t){return r.difference(u,n,e,t)}function R(n,e,t){return r.symmetricDifference(u,n,e,t)}function v(n,e,t){return r.intersect(u,n,e,t)}function D(n,e,t=null){return r.union(u,n,e,t)}function H(n,e,t,i,o,c,f){return r.offset(u,n,e,t,i,o,c,f)}function L(n,e,t,i,o=!1){return r.buffer(u,n,e,t,i,o)}function S(n,e,t,i,o,c,f){return r.geodesicBuffer(u,n,e,t,i,o,c,f)}function _(n,e,t,i=!0){return r.nearestCoordinate(u,n,e,t,i)}function b(n,e,t){return r.nearestVertex(u,n,e,t)}function B(n,e,t,i,o){return r.nearestVertices(u,n,e,t,i,o)}function q(n,e,t,i){if(e==null||i==null)throw new Error("Illegal Argument Exception");const o=r.rotate(e,t,i);return o.spatialReference=n,o}function C(n,e,t){if(e==null||t==null)throw new Error("Illegal Argument Exception");const i=r.flipHorizontal(e,t);return i.spatialReference=n,i}function G(n,e,t){if(e==null||t==null)throw new Error("Illegal Argument Exception");const i=r.flipVertical(e,t);return i.spatialReference=n,i}function $(n,e,t,i,o){return r.generalize(u,n,e,t,i,o)}function k(n,e,t,i){return r.densify(u,n,e,t,i)}function O(n,e,t,i,o=0){return r.geodesicDensify(u,n,e,t,i,o)}function F(n,e,t){return r.planarArea(u,n,e,t)}function J(n,e,t){return r.planarLength(u,n,e,t)}function K(n,e,t,i){return r.geodesicArea(u,n,e,t,i)}function M(n,e,t,i){return r.geodesicLength(u,n,e,t,i)}const Q=Object.freeze({__proto__:null,extendedSpatialReferenceInfo:s,clip:l,cut:a,contains:p,crosses:d,distance:g,equals:m,intersects:h,touches:x,within:y,disjoint:w,overlaps:A,relate:E,isSimple:j,simplify:V,convexHull:z,difference:I,symmetricDifference:R,intersect:v,union:D,offset:H,buffer:L,geodesicBuffer:S,nearestCoordinate:_,nearestVertex:b,nearestVertices:B,rotate:q,flipHorizontal:C,flipVertical:G,generalize:$,densify:k,geodesicDensify:O,planarArea:F,planarLength:J,geodesicArea:K,geodesicLength:M});export{v as A,$ as B,K as C,B as D,D as E,M as G,q as H,S as I,k as L,C as R,O as S,_ as V,F as _,m as a,G as b,h as c,E as d,x as f,A as g,V as h,a as i,H as j,Q as k,y as l,j as m,g as o,w as p,J as q,s as r,p as s,l as t,d as u,b as v,R as w,I as x,z as y,L as z};
