import{H as p,r as e,t as s,w as a,z as h,A as c}from"./vendor.d423bc92.js";import{E as o}from"./Graphics3DGraphicLikeLayerView.25519091.js";import"./Graphics3DScaleVisibility.e0687830.js";import"./optimizedFeatureQueryEngineAdapter.3d6ba7a2.js";import"./centroid.d8eb382d.js";import"./PooledRBush.2ccf2077.js";import"./quickselect.32614045.js";import"./Graphics3DObjectStates.af9a6581.js";const d=i=>{let r=class extends p(i){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return e([s()],r.prototype,"graphics",void 0),e([s()],r.prototype,"renderer",void 0),e([s()],r.prototype,"updating",void 0),e([s()],r.prototype,"view",void 0),r=e([a("esri.views.layers.GraphicsView")],r),r};let t=class extends d(h){constructor(i){super(i),this.graphics3d=null,this.slicePlaneEnabled=!1,this.drapeSourceType=1}initialize(){const i="__sceneView.graphics-"+Date.now().toString(16),r={id:i,uid:i};this._set("graphics3d",new o({owner:this,layer:r})),this.graphics3d.setup()}destroy(){this.graphics3d&&(this.graphics3d.destroy(),this._set("graphics3d",null))}get updating(){var i;return!((i=this.graphics3d)==null||!i.updating)}notifyGraphicGeometryChanged(i){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(i)}notifyGraphicVisibilityChanged(i){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(i)}get graphics3DGraphics(){return this.graphics3d.graphicsCore.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphics3d.graphicsCore.graphics3DGraphicsByObjectID}get symbolUpdateType(){return this.graphics3d.graphicsCore.symbolUpdateType}getGraphicFromGraphicUid(i){return this.graphics3d.getGraphicFromGraphicUid(i)}whenGraphicBounds(i,r){return this.graphics3d.whenGraphicBounds(i,r)}graphicChanged(i){this.graphics3d.graphicsCore.graphicUpdateHandler(i)}get updatePolicy(){return this.graphics3d.graphicsCore.effectiveUpdatePolicy}queryGraphics(){return Promise.resolve(this.loadedGraphics)}async fetchPopupFeatures(i,r){return c(r)?r.clientGraphics:null}highlight(i){return this.graphics3d.highlight(i)}maskOccludee(i){return this.graphics3d.maskOccludee(i)}};e([s({readOnly:!0,aliasOf:"view.graphics"})],t.prototype,"graphics",void 0),e([s({aliasOf:"graphics"})],t.prototype,"loadedGraphics",void 0),e([s({readOnly:!0})],t.prototype,"updating",null),e([s({constructOnly:!0})],t.prototype,"view",void 0),e([s()],t.prototype,"graphics3d",void 0),e([s({type:Boolean})],t.prototype,"slicePlaneEnabled",void 0),t=e([a("esri.views.3d.layers.GraphicsView3D")],t);const w=t;export{w as default};
