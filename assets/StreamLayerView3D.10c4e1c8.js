var $=Object.defineProperty;var m=Object.getOwnPropertySymbols;var j=Object.prototype.hasOwnProperty,T=Object.prototype.propertyIsEnumerable;var f=(e,t,r)=>t in e?$(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,g=(e,t)=>{for(var r in t||(t={}))j.call(t,r)&&f(e,r,t[r]);if(m)for(var r of m(t))T.call(t,r)&&f(e,r,t[r]);return e};import{e as o,d as i,i as l,cd as V,cc as L,p as k,fE as F,r as p,h as U,cj as N,bh as J,bi as P,x as z,n as C}from"./index.89a7b683.js";import{t as D,h as Q}from"./createConnection.da7b4dd2.js";import{s as q,E as A}from"./EventedSet.0072de0a.js";import"./Graphics3DFeatureLikeLayerView.7586aef8.js";import"./Graphics3DScaleVisibility.bc09a75c.js";import"./optimizedFeatureQueryEngineAdapter.14be8206.js";import"./centroid.2275fb3f.js";import"./PooledRBush.d52fd1e0.js";import"./quickselect.32614045.js";import"./Graphics3DObjectStates.53e927e5.js";import"./QueryEngine.23601ed8.js";import"./WhereClause.1d2917c7.js";import"./json.2d0d6862.js";import"./QueryEngineCapabilities.83e56447.js";import"./utils.2d48938c.js";import"./ClassBreaksDefinition.f112ce2a.js";import"./floorFilterUtils.1acb5b5d.js";import"./Graphics3DFrustumVisibility.d6305daa.js";import"./attributeUtils.a1b96ab7.js";import"./projectExtentUtils.c2292b8f.js";var d;const Z=2500;let c=d=class extends U{getObjectId(){return this.objectId}clone(){return new d(g({objectId:this.objectId},this.cloneProperties()))}};o([i({type:Number,json:{read:!0}})],c.prototype,"objectId",void 0),c=d=o([l("esri.layers.graphics.controllers.StreamGraphic")],c);class B{constructor(t){this.onUpdate=t,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(t){this._idToGraphic.set(t.objectId,t)}get(t){return this._idToGraphic.get(t)}forEach(t){this._idToGraphic.forEach(t)}removeById(t){const r=this._idToGraphic.get(t);return r?(r.sourceLayer=r.layer=null,this._idToGraphic.delete(t),r):null}update(t,r){this.onUpdate(t,r)}get size(){return this._idToGraphic.size}}let n=class extends V(L(k)){constructor(){super(...arguments),this._updateInfo={websocket:0,client:0},this.graphics=new q}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}clear(){this._updateIntervalId&&(clearInterval(this._updateIntervalId),this._updateIntervalId=0),this.connection&&(this.connection.destroy(),this.connection=null),this.store&&(this.store.destroy(),this.store=null),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{parsedUrl:e,spatialReference:t,definitionExpression:r,geometryDefinition:v,objectIdField:_,timeInfo:w,purgeOptions:I,maxReconnectionAttempts:b,maxReconnectionInterval:O,updateInterval:S}=this.layer,x=F.toJSON(this.layer.geometryType),E=t,u=this.layerView.view.spatialReference,R={geometry:v,where:r};this.clear(),this._set("connection",D(e,E,u,x,R,b,O)),this._outSpatialReference=u.toJSON(),this.store=new B(this._onUpdate.bind(this)),this.featuresManager=new Q(this.store,_,w.toJSON(),I),this.handles.add([this.connection.on("feature",a=>this._onFeature(a)),this.layer.watch("definitionExpression",()=>this._startup()),this.layer.watch("geometryDefinition",()=>this._startup()),this.layer.watch("purgeOptions",()=>this._startup())]);let y=performance.now();this._updateIntervalId=setInterval(()=>{const a=performance.now(),h=a-y;if(h>Z){y=a;const G=Math.round(this._updateInfo.client/(h/1e3)),M=Math.round(this._updateInfo.websocket/(h/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:G,websocket:M})}this.featuresManager.checkForUpdates()},S)}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{p(e.geometry)&&!e.geometry.spatialReference&&(e.geometry.spatialReference=this._outSpatialReference);const t=c.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){p(t)&&this.graphics.removeMany(t),p(e)&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}};o([i()],n.prototype,"connection",void 0),o([i()],n.prototype,"layer",void 0),o([i()],n.prototype,"layerView",void 0),o([i({readOnly:!0})],n.prototype,"updating",null),n=o([l("esri.layers.graphics.controllers.StreamController")],n);const H=n,K=e=>{let t=class extends e{constructor(...r){super(...r),this.connectionError=null,this.connectionStatus="disconnected",this.filter=null}};return o([i({readOnly:!0})],t.prototype,"connectionError",void 0),o([i({aliasOf:"controller.connection.connectionStatus",readOnly:!0})],t.prototype,"connectionStatus",void 0),o([i({type:N})],t.prototype,"filter",void 0),t=o([l("esri.layers.mixins.StreamLayerView")],t),t};let s=class extends K(A(J(P))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=0,this.hasZ=!0,this.hasM=!1}get connectionError(){const e=this.get("controller.connection.errorString");if(e)return new z("stream-controller",e)}createQuery(){return new C({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(e,t){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e),t==null?void 0:t.signal)}createController(){return new H({layer:this.layer,layerView:this})}beforeSetController(){}};o([i({readOnly:!0})],s.prototype,"updatePolicy",void 0),o([i({readOnly:!0})],s.prototype,"connectionError",null),o([i()],s.prototype,"controller",void 0),o([i({readOnly:!0})],s.prototype,"hasZ",void 0),o([i({readOnly:!0})],s.prototype,"hasM",void 0),s=o([l("esri.views.3d.layers.StreamLayerView3D")],s);const vt=s;export{vt as default};
