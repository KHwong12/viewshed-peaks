import{e as i,d as s,i as m,x as y,aq as g,r as v,bg as x,bh as w,bi as F,t as u,aI as b}from"./index.89a7b683.js";import{i as I}from"./RefreshableLayerView.567b5392.js";import{s as P}from"./clickToleranceUtils.f03f410d.js";import{a as E}from"./drapedUtils.fa6ab048.js";const L=a=>{let t=class extends a{async fetchPopupFeatures(o,c){const{layer:n}=this;if(!o)return Promise.reject(new y("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:n}));if(n.type!=="tile")return Promise.reject(new y("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:n.type}));const f=this.get("view.scale"),h=n.allSublayers.toArray().filter(e=>{const l=e.minScale===0||f<=e.minScale,p=e.maxScale===0||f>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&l&&p});return g(h.map(async e=>{const l=e.createQuery(),p=v(c)?c.event:null,d=P({renderer:e.renderer,event:p});return l.geometry=this.createFetchPopupFeaturesQueryGeometry(o,d),l.outFields=await e.popupTemplate.getRequiredFields(),(await e.queryFeatures(l)).features})).then(e=>[].concat(...e.map(l=>l.value).filter(Boolean)))}};return i([s()],t.prototype,"layer",void 0),t=i([m("esri.layers.mixins.TileLayerView")],t),t};let r=class extends I(x(L(w(F)))){constructor(){super(...arguments),this.type="tile-3d"}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){if(this.tileInfo){const a=this.tileInfo.lods,t=a[0].scale,o=a[a.length-1].scale;return this.levelRangeFromScaleRange(t,o)}return{minLevel:0,maxLevel:0}}initialize(){if(this.layer.type==="web-tile"){const a=this.layer.get("fullExtent.spatialReference"),t=this.layer.get("tileInfo.spatialReference");if(u(a)||u(t)||!b(a,t)){const o=this.layer.originOf("fullExtent")==="defaults"||u(this.layer.fullExtent)?"SceneView requires fullExtent to be specified by the user on WebTileLayer":"SceneView requires fullExtent to be specified in the same spatial reference as tileInfo on WebTileLayer";this.addResolvingPromise(Promise.reject(new y("layerview:incompatible-fullextent",o)))}}this._addTilingSchemeMatchPromise()}createFetchPopupFeaturesQueryGeometry(a,t){return E(a,t,this.view)}async doRefresh(){this.suspended||this.emit("data-changed")}};i([s({readOnly:!0})],r.prototype,"imageFormatIsOpaque",null),i([s({readOnly:!0})],r.prototype,"hasMixedImageFormats",null),i([s({aliasOf:"layer.fullExtent"})],r.prototype,"fullExtent",void 0),i([s()],r.prototype,"layer",void 0),i([s({aliasOf:"layer.tileInfo"})],r.prototype,"tileInfo",void 0),i([s({readOnly:!0})],r.prototype,"dataLevelRange",null),r=i([m("esri.views.3d.layers.TileLayerView3D")],r);const T=r;export{T as default};
