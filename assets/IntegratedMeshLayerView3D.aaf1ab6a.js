import{bh as c,bi as g,fM as v,cN as u,r as d,aW as _,bl as y,bm as p,h as m,t as f,e as i,d as o,cl as T,i as x}from"./index.89a7b683.js";import{$ as O}from"./I3SMeshView3D.91689aa1.js";import"./I3SAttributeOverrides.1236fd86.js";import"./I3SUtil.6ad9e191.js";import"./I3SBinaryReader.29815c13.js";import"./SceneModification.e79e1be8.js";import"./persistable.272e3621.js";import"./multiOriginJSONSupportUtils.f4e66410.js";import"./Graphics3DScaleVisibility.bc09a75c.js";import"./optimizedFeatureQueryEngineAdapter.14be8206.js";import"./centroid.2275fb3f.js";import"./PooledRBush.d52fd1e0.js";import"./quickselect.32614045.js";import"./SceneLayerWorker.689e0ab9.js";import"./attributeUtils.a1b96ab7.js";const S=.2;let r=class extends O(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=1,this._overlayTexOffset=v(-1,-1,-1,-1),this._overlayTexScale=u(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}get progressiveLoadFactor(){return this.lodFactor>=1?S:1}setDrapingTextures(e){this._clearDrapingTexture(0),this._clearDrapingTexture(1);for(const t of e){const l=t.index,a=t.extent,s=t.needsColorWithoutRasterImage?t.getValidTarget(1):t.hasDrapedFeatureSource?t.getValidTarget(0):null;if(d(s)&&_(a)>0){this._overlayTexOffset[2*l]=-a[0]/y(a),this._overlayTexOffset[2*l+1]=-a[1]/p(a),this._overlayTexScale[2*l]=1/y(a),this._overlayTexScale[2*l+1]=1/p(a);const n=t.getValidTarget(2),h=t.getValidTarget(3);this._overlayColor=s.getTexture(),this._overlayHighlight=n?n.getTexture():null,this._overlayNormal=h?h.getTexture():null}}this._forAllNodes(t=>d(t)&&this._collection.updateMaterial(t.objectHandle,l=>this._updateMaterialOverlay(l)))}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.overlayNormal=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale}initialize(){this.updatingHandles.add(this.layer,"modifications",()=>this._loadModifications(),2)}_createLayerGraphic(){const e=new m;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),f(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(e,()=>this._modifications=e.toArray(),2),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o({aliasOf:"layer"})],r.prototype,"i3slayer",void 0),i([o()],r.prototype,"suspended",void 0),i([o(T)],r.prototype,"updatingProgress",void 0),i([o({readOnly:!0,aliasOf:"_controller.updatingProgress"})],r.prototype,"updatingProgressValue",void 0),i([o({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],r.prototype,"lodFactor",void 0),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([x("esri.views.3d.layers.SceneLayerView3D")],r);const W=r;export{W as default};
